%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 200 600 624
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 5 div 0 0 0.5 5 div neg  0 3120 5 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
%--use color 0 
0 Setcolor
fillsolid
[] 0 setdash
/WhiteLev 16 def
/Setgray { WhiteLev div setgray } def 
/Setcolor { WhiteLev div setgray } def 
/usecolor 0  def 
%--end use color 0 
/Times-Roman findfont 100 scf mul scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
fillsolid
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
fillsolid
(0) 722 3906 0  0.00 [722 3816 57 120] Show
 (drawsegs) 4 [ 0]
[750 3710 750 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1071 3710 1071 3741 
] dogrey 
(2) 1365 3906 0  0.00 [1365 3816 57 120] Show
 (drawsegs) 4 [ 0]
[1393 3710 1393 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1714 3710 1714 3741 
] dogrey 
(4) 2008 3906 0  0.00 [2008 3816 57 120] Show
 (drawsegs) 4 [ 0]
[2036 3710 2036 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2357 3710 2357 3741 
] dogrey 
(6) 2651 3906 0  0.00 [2651 3816 57 120] Show
 (drawsegs) 4 [ 0]
[2679 3710 2679 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[3000 3710 3000 3741 
] dogrey 
(8) 3293 3906 0  0.00 [3293 3816 57 120] Show
 (drawsegs) 4 [ 0]
[3321 3710 3321 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[3643 3710 3643 3741 
] dogrey 
(10) 3907 3906 0  0.00 [3907 3816 114 120] Show
 (drawsegs) 4 [ 0]
[3964 3710 3964 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4286 3710 4286 3741 
] dogrey 
(12) 4550 3906 0  0.00 [4550 3816 114 120] Show
 (drawsegs) 4 [ 0]
[4607 3710 4607 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4929 3710 4929 3741 
] dogrey 
(14) 5193 3906 0  0.00 [5193 3816 114 120] Show
 (drawsegs) 4 [ 0]
[5250 3710 5250 3773 
] dogrey 
(-1.3) 449 3770 0  0.00 [449 3680 229 120] Show
 (drawsegs) 4 [ 0]
[750 3710 690 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3483 720 3483 
] dogrey 
(-0.9) 449 3316 0  0.00 [449 3226 229 120] Show
 (drawsegs) 4 [ 0]
[750 3256 690 3256 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3029 720 3029 
] dogrey 
(-0.5) 449 2861 0  0.00 [449 2771 229 120] Show
 (drawsegs) 4 [ 0]
[750 2801 690 2801 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2574 720 2574 
] dogrey 
(-0.1) 449 2407 0  0.00 [449 2317 229 120] Show
 (drawsegs) 4 [ 0]
[750 2347 690 2347 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2120 720 2120 
] dogrey 
(0.3) 506 1953 0  0.00 [506 1863 172 120] Show
 (drawsegs) 4 [ 0]
[750 1893 690 1893 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1666 720 1666 
] dogrey 
(0.7) 506 1499 0  0.00 [506 1409 172 120] Show
 (drawsegs) 4 [ 0]
[750 1439 690 1439 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1211 720 1211 
] dogrey 
(1.1) 506 1044 0  0.00 [506 954 172 120] Show
 (drawsegs) 4 [ 0]
[750 984 690 984 
] dogrey 
 (drawsegs) 4 [ 0]
[750 757 720 757 
] dogrey 
(1.5) 506 590 0  0.00 [506 500 172 120] Show
 (drawsegs) 4 [ 0]
[750 530 690 530 
] dogrey 
[] 0 setdash
fillsolid
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
 (drawpoly) 432 [ 0]
[750 2234 753 1701 756 1266 760 993 763 896 766 937 769 1047 773 1153 776 1206 779 1192 
782 1132 785 1065 789 1026 792 1030 795 1069 798 1118 801 1150 805 1151 808 1124 811 1086 
814 1058 818 1053 821 1073 824 1104 827 1129 830 1136 834 1122 837 1096 840 1073 843 1065 
846 1075 850 1097 853 1118 856 1127 859 1120 863 1102 866 1082 869 1072 872 1076 875 1092 
879 1110 882 1121 885 1119 888 1105 891 1089 895 1078 898 1078 901 1089 904 1104 908 1116 
911 1117 914 1108 917 1094 920 1082 924 1080 927 1087 930 1100 933 1112 936 1115 940 1109 
943 1097 946 1086 949 1081 953 1086 956 1097 959 1108 962 1113 965 1110 969 1100 972 1090 
975 1083 978 1085 981 1094 985 1105 988 1111 991 1110 994 1103 998 1093 1001 1086 1004 1085 
1007 1092 1010 1102 1014 1109 1017 1110 1020 1105 1023 1096 1026 1088 1030 1086 1033 1090 1036 1099 
1039 1107 1043 1110 1046 1106 1049 1098 1052 1090 1055 1086 1059 1089 1062 1097 1065 1105 1068 1109 
1071 1107 1075 1100 1078 1092 1081 1087 1084 1088 1088 1094 1091 1103 1094 1108 1097 1108 1100 1102 
1104 1094 1107 1088 1110 1088 1113 1093 1116 1100 1120 1107 1123 1108 1126 1104 1129 1096 1133 1090 
1136 1088 1139 1091 1142 1098 1145 1105 1149 1108 1152 1105 1155 1098 1158 1091 1161 1088 1165 1090 
1168 1096 1171 1103 1174 1107 1178 1106 1181 1100 1184 1093 1187 1089 1190 1089 1194 1094 1197 1102 
1200 1107 1203 1107 1206 1102 1210 1095 1213 1090 1216 1089 1219 1093 1223 1100 1226 1106 1229 1107 
1232 1104 1235 1097 1239 1091 1242 1088 1245 1091 1248 1098 1251 1104 1255 1107 1258 1105 1261 1099 
1264 1092 1268 1088 1271 1090 1274 1096 1277 1103 1280 1107 1284 1106 1287 1101 1290 1094 1293 1089 
1296 1089 1300 1094 1303 1101 1306 1106 1309 1107 1313 1103 1316 1096 1319 1090 1322 1088 1325 1092 
1329 1099 1332 1106 1335 1108 1338 1104 1341 1097 1345 1091 1348 1088 1351 1091 1354 1097 1358 1104 
1361 1108 1364 1106 1367 1099 1370 1092 1374 1088 1377 1089 1380 1095 1383 1103 1386 1108 1390 1107 
1393 1102 1396 1094 1399 1088 1403 1088 1406 1093 1409 1101 1412 1107 1415 1108 1419 1104 1422 1096 
1425 1089 1428 1087 1431 1091 1435 1099 1438 1106 1441 1109 
] dogrey 
 (drawpoly) 432 [0]
[1444 1106 1448 1098 1451 1090 1454 1086 1457 1089 1460 1097 1464 1105 1467 1110 1470 1108 1473 1100 
1476 1091 1480 1086 1483 1087 1486 1094 1489 1103 1493 1110 1496 1110 1499 1103 1502 1093 1505 1086 
1509 1085 1512 1091 1515 1101 1518 1110 1521 1112 1525 1106 1528 1096 1531 1086 1534 1083 1538 1088 
1541 1099 1544 1109 1547 1113 1550 1109 1554 1099 1557 1087 1560 1082 1563 1085 1566 1095 1570 1108 
1573 1115 1576 1113 1579 1102 1583 1089 1586 1080 1589 1081 1592 1091 1595 1106 1599 1116 1602 1117 
1605 1107 1608 1091 1611 1079 1615 1077 1618 1086 1621 1103 1624 1117 1628 1121 1631 1112 1634 1095 
1637 1078 1640 1072 1644 1080 1647 1098 1650 1118 1653 1127 1656 1120 1660 1100 1663 1078 1666 1065 
1669 1070 1673 1092 1676 1118 1679 1135 1682 1132 1685 1109 1689 1077 1692 1055 1695 1055 1698 1081 
1701 1119 1705 1149 1708 1153 1711 1125 1714 1077 1718 1034 1721 1024 1724 1057 1727 1121 1730 1185 
1734 1208 1737 1166 1740 1066 1743 952 1746 895 1750 966 1753 1211 1756 1623 1759 2146 1763 2685 
1766 3141 1769 3443 1772 3567 1775 3543 1779 3439 1782 3328 1785 3265 1788 3269 1791 3324 1795 3392 
1798 3438 1801 3440 1804 3406 1808 3357 1811 3320 1814 3314 1817 3337 1820 3375 1824 3406 1827 3415 
1830 3399 1833 3368 1836 3341 1840 3331 1843 3342 1846 3367 1849 3391 1853 3402 1856 3395 1859 3374 
1862 3352 1865 3341 1869 3345 1872 3362 1875 3382 1878 3394 1881 3392 1885 3378 1888 3360 1891 3347 
1894 3347 1898 3359 1901 3376 1904 3388 1907 3390 1910 3380 1914 3365 1917 3353 1920 3350 1923 3357 
1926 3371 1930 3384 1933 3388 1936 3382 1939 3369 1943 3357 1946 3352 1949 3356 1952 3368 1955 3380 
1959 3386 1962 3382 1965 3372 1968 3361 1971 3354 1975 3356 1978 3365 1981 3376 1984 3383 1988 3383 
1991 3375 1994 3364 1997 3357 2000 3356 2004 3363 2007 3373 2010 3381 2013 3382 2016 3377 2020 3367 
2023 3359 2026 3356 2029 3361 2033 3370 2036 3379 2039 3382 2042 3378 2045 3370 2049 3361 2052 3357 
2055 3360 2058 3368 2061 3376 2065 3381 2068 3379 2071 3372 2074 3364 2078 3358 2081 3359 2084 3366 
2087 3374 2090 3380 2094 3380 2097 3374 2100 3366 2103 3360 2106 3359 2110 3364 2113 3372 2116 3378 
2119 3380 2123 3376 2126 3368 2129 3361 2132 3359 2135 3362 
] dogrey 
 (drawpoly) 432 [0]
[2139 3369 2142 3376 2145 3379 2148 3377 2151 3370 2155 3363 2158 3359 2161 3361 2164 3367 2168 3375 
2171 3379 2174 3378 2177 3372 2180 3365 2184 3360 2187 3360 2190 3366 2193 3373 2196 3378 2200 3378 
2203 3374 2206 3367 2209 3361 2213 3360 2216 3364 2219 3371 2222 3377 2225 3379 2229 3375 2232 3369 
2235 3362 2238 3360 2241 3363 2245 3369 2248 3376 2251 3379 2254 3377 2258 3371 2261 3364 2264 3360 
2267 3361 2270 3367 2274 3374 2277 3378 2280 3378 2283 3372 2286 3365 2290 3360 2293 3360 2296 3365 
2299 3372 2303 3378 2306 3379 2309 3374 2312 3367 2315 3361 2319 3360 2322 3364 2325 3370 2328 3377 
2331 3379 2335 3376 2338 3369 2341 3362 2344 3359 2348 3362 2351 3369 2354 3376 2357 3379 2360 3377 
2364 3371 2367 3364 2370 3360 2373 3361 2376 3366 2380 3374 2383 3379 2386 3379 2389 3373 2393 3365 
2396 3360 2399 3359 2402 3364 2405 3372 2409 3378 2412 3380 2415 3375 2418 3367 2421 3361 2425 3359 
2428 3362 2431 3370 2434 3377 2438 3380 2441 3377 2444 3370 2447 3362 2450 3358 2454 3360 2457 3368 
2460 3376 2463 3381 2466 3379 2470 3372 2473 3363 2476 3358 2479 3359 2483 3365 2486 3374 2489 3381 
2492 3381 2495 3375 2499 3365 2502 3358 2505 3357 2508 3363 2511 3372 2515 3380 2518 3383 2521 3377 
2524 3367 2528 3358 2531 3355 2534 3360 2537 3370 2540 3380 2544 3384 2547 3380 2550 3370 2553 3360 
2556 3354 2560 3357 2563 3367 2566 3378 2569 3385 2573 3383 2576 3374 2579 3361 2582 3353 2585 3353 
2589 3363 2592 3376 2595 3386 2598 3387 2601 3378 2605 3364 2608 3352 2611 3350 2614 3358 2618 3373 
2621 3387 2624 3391 2627 3383 2630 3367 2634 3352 2637 3346 2640 3352 2643 3369 2646 3387 2650 3395 
2653 3390 2656 3372 2659 3352 2663 3341 2666 3345 2669 3363 2672 3386 2675 3401 2679 3399 2682 3380 
2685 3353 2688 3334 2691 3333 2695 3354 2698 3385 2701 3410 2704 3414 2708 3392 2711 3355 2714 3322 
2717 3313 2720 3336 2724 3382 2727 3428 2730 3444 2733 3419 2736 3357 2740 3291 2743 3259 2746 3290 
2749 3383 2753 3499 2756 3570 2759 3523 2762 3307 2765 2919 2769 2408 2772 1865 2775 1389 2778 1061 
2781 909 2785 913 2788 1009 2791 1124 2794 1197 2798 1203 2801 1154 2804 1085 2807 1034 2810 1024 
2814 1054 2817 1103 2820 1143 2823 1155 2826 1135 2830 1098 
] dogrey 
 (drawpoly) 432 [0]
[2833 1065 2836 1052 2839 1065 2843 1094 2846 1123 2849 1136 2852 1128 2855 1105 2859 1079 2862 1065 
2865 1070 2868 1089 2871 1112 2875 1126 2878 1124 2881 1108 2884 1088 2888 1074 2891 1073 2894 1086 
2897 1105 2900 1119 2904 1121 2907 1110 2910 1094 2913 1080 2916 1077 2920 1085 2923 1100 2926 1113 
2929 1118 2933 1112 2936 1098 2939 1085 2942 1079 2945 1084 2949 1096 2952 1109 2955 1115 2958 1112 
2961 1101 2965 1089 2968 1082 2971 1084 2974 1093 2978 1105 2981 1112 2984 1112 2987 1104 2990 1093 
2994 1085 2997 1084 3000 1091 3003 1101 3006 1110 3010 1112 3013 1106 3016 1096 3019 1087 3023 1084 
3026 1089 3029 1098 3032 1107 3035 1111 3039 1107 3042 1099 3045 1090 3048 1085 3051 1088 3055 1096 
3058 1105 3061 1110 3064 1108 3068 1101 3071 1092 3074 1087 3077 1087 3080 1094 3084 1102 3087 1108 
3090 1108 3093 1103 3096 1095 3100 1088 3103 1087 3106 1092 3109 1100 3113 1107 3116 1109 3119 1104 
3122 1097 3125 1090 3129 1087 3132 1091 3135 1098 3138 1105 3141 1108 3145 1106 3148 1099 3151 1092 
3154 1088 3158 1089 3161 1096 3164 1103 3167 1108 3170 1107 3174 1101 3177 1093 3180 1089 3183 1089 
3186 1094 3190 1101 3193 1107 3196 1107 3199 1103 3203 1095 3206 1090 3209 1088 3212 1092 3215 1099 
3219 1105 3222 1107 3225 1104 3228 1097 3231 1091 3235 1088 3238 1091 3241 1097 3244 1104 3248 1107 
3251 1105 3254 1099 3257 1092 3260 1089 3264 1090 3267 1095 3270 1102 3273 1107 3276 1106 3280 1101 
3283 1094 3286 1089 3289 1089 3293 1094 3296 1101 3299 1106 3302 1107 3305 1103 3309 1096 3312 1090 
3315 1088 3318 1092 3321 1099 3325 1105 3328 1107 3331 1104 3334 1098 3338 1091 3341 1088 3344 1090 
3347 1097 3350 1104 3354 1108 3357 1106 3360 1100 3363 1093 3366 1088 3370 1089 3373 1095 3376 1102 
3379 1107 3383 1107 3386 1102 3389 1094 3392 1089 3395 1088 3399 1093 3402 1100 3405 1107 3408 1108 
3411 1104 3415 1096 3418 1089 3421 1087 3424 1091 3428 1098 3431 1106 3434 1109 3437 1106 3440 1098 
3444 1091 3447 1087 3450 1089 3453 1096 3456 1104 3460 1109 3463 1108 3466 1101 3469 1092 3473 1087 
3476 1087 3479 1094 3482 1103 3485 1109 3489 1109 3492 1103 3495 1094 3498 1087 3501 1086 3505 1091 
3508 1101 3511 1108 3514 1111 3518 1106 3521 1096 3524 1088 
] dogrey 
 (drawpoly) 432 [0]
[3527 1084 3530 1089 3534 1098 3537 1108 3540 1112 3543 1109 3546 1099 3550 1089 3553 1083 3556 1086 
3559 1095 3563 1106 3566 1113 3569 1111 3572 1102 3575 1091 3579 1083 3582 1083 3585 1091 3588 1104 
3591 1113 3595 1114 3598 1106 3601 1093 3604 1082 3608 1080 3611 1087 3614 1101 3617 1114 3620 1118 
3624 1111 3627 1096 3630 1082 3633 1076 3636 1082 3640 1097 3643 1113 3646 1121 3649 1117 3653 1101 
3656 1083 3659 1072 3662 1076 3665 1092 3669 1112 3672 1126 3675 1124 3678 1108 3681 1084 3685 1067 
3688 1067 3691 1084 3694 1110 3698 1131 3701 1135 3704 1118 3707 1087 3710 1060 3714 1052 3717 1070 
3720 1106 3723 1141 3726 1155 3730 1137 3733 1093 3736 1046 3739 1023 3743 1042 3746 1099 3749 1167 
3752 1207 3755 1187 3759 1102 3762 986 3765 902 3768 926 3771 1113 3775 1476 3778 1973 3781 2518 
3784 3010 3788 3366 3791 3546 3794 3563 3797 3476 3800 3360 3804 3278 3807 3261 3810 3303 3813 3372 
3816 3427 3820 3444 3823 3420 3826 3372 3829 3329 3833 3312 3836 3327 3839 3363 3842 3398 3845 3415 
3849 3406 3852 3378 3855 3348 3858 3332 3861 3336 3865 3358 3868 3384 3871 3401 3874 3399 3878 3382 
3881 3359 3884 3343 3887 3342 3890 3356 3894 3376 3897 3392 3900 3395 3903 3384 3906 3365 3910 3350 
3913 3346 3916 3354 3919 3371 3923 3385 3926 3391 3929 3384 3932 3370 3935 3356 3939 3349 3942 3354 
3945 3367 3948 3380 3951 3388 3955 3385 3958 3373 3961 3360 3964 3353 3968 3354 3971 3364 3974 3376 
3977 3385 3980 3384 3984 3376 3987 3364 3990 3355 3993 3354 3996 3362 4000 3373 4003 3382 4006 3384 
4009 3378 4013 3368 4016 3358 4019 3355 4022 3360 4025 3370 4029 3379 4032 3383 4035 3379 4038 3370 
4041 3361 4045 3356 4048 3359 4051 3367 4054 3376 4058 3381 4061 3380 4064 3373 4067 3364 4070 3358 
4074 3358 4077 3365 4080 3374 4083 3380 4086 3380 4090 3375 4093 3366 4096 3359 4099 3358 4103 3363 
4106 3371 4109 3378 4112 3380 4115 3376 4119 3368 4122 3361 4125 3358 4128 3362 4131 3369 4135 3376 
4138 3380 4141 3377 4144 3371 4148 3363 4151 3359 4154 3361 4157 3367 4160 3375 4164 3379 4167 3378 
4170 3373 4173 3365 4176 3360 4180 3360 4183 3365 4186 3373 4189 3378 4193 3379 4196 3374 4199 3367 
4202 3361 4205 3360 4209 3364 4212 3371 4215 3377 4218 3379 
] dogrey 
 (drawpoly) 354 [0]
[4221 3376 4225 3369 4228 3362 4231 3360 4234 3362 4238 3369 4241 3375 4244 3379 4247 3377 4250 3371 
4254 3364 4257 3360 4260 3361 4263 3367 4266 3374 4270 3378 4273 3378 4276 3373 4279 3366 4283 3361 
4286 3360 4289 3365 4292 3372 4295 3378 4299 3379 4302 3374 4305 3368 4308 3362 4311 3360 4315 3363 
4318 3370 4321 3376 4324 3379 4328 3376 4331 3369 4334 3363 4337 3360 4340 3362 4344 3368 4347 3375 
4350 3379 4353 3377 4356 3371 4360 3364 4363 3360 4366 3361 4369 3366 4373 3373 4376 3379 4379 3378 
4382 3373 4385 3366 4389 3360 4392 3360 4395 3364 4398 3372 4401 3378 4405 3379 4408 3375 4411 3368 
4414 3361 4418 3359 4421 3362 4424 3370 4427 3377 4430 3380 4434 3377 4437 3370 4440 3362 4443 3359 
4446 3361 4450 3367 4453 3375 4456 3380 4459 3379 4463 3372 4466 3364 4469 3359 4472 3359 4475 3365 
4479 3374 4482 3380 4485 3380 4488 3375 4491 3366 4495 3359 4498 3358 4501 3363 4504 3372 4508 3379 
4511 3382 4514 3377 4517 3368 4520 3360 4524 3356 4527 3360 4530 3369 4533 3378 4536 3383 4540 3380 
4543 3371 4546 3361 4549 3355 4553 3358 4556 3366 4559 3377 4562 3383 4565 3382 4569 3374 4572 3363 
4575 3355 4578 3355 4581 3363 4585 3375 4588 3384 4591 3385 4594 3377 4598 3365 4601 3355 4604 3352 
4607 3359 4610 3372 4614 3384 4617 3388 4620 3382 4623 3368 4626 3355 4630 3349 4633 3355 4636 3368 
4639 3383 4643 3391 4646 3387 4649 3373 4652 3356 4655 3346 4659 3349 4662 3363 4665 3382 4668 3394 
4671 3393 4675 3379 4678 3358 4681 3343 4684 3342 4688 3356 4691 3379 4694 3398 4697 3402 4700 3387 
4704 3361 4707 3338 4710 3331 4713 3345 4716 3375 4720 3404 4723 3415 4726 3401 4729 3367 4733 3331 
4736 3312 4739 3326 4742 3367 4745 3415 4749 3443 4752 3432 4755 3379 4758 3310 4761 3263 4765 3272 
4768 3348 4771 3463 4774 3557 4778 3555 4781 3396 4784 3059 4787 2579 
] dogrey 
fillsolid
/absolu true def
[] 0 setdash
fillsolid
-1 -1 200000 200000 setclipzone
 showpage

 end saved restore 


